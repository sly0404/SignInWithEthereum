import type { BigNumber } from "bignumber.js";
import { TransactionCommonRaw } from "./transaction";
import { NFTStandard } from "./nft";
/**
 *
 */
export declare type OperationType = "IN" | "OUT" | "NONE" | "CREATE" | "REVEAL" | "DELEGATE" | "UNDELEGATE" | "REDELEGATE" | "REWARD" | "FEES" | "FREEZE" | "UNFREEZE" | "VOTE" | "REWARD_PAYOUT" | "BOND" | "UNBOND" | "WITHDRAW_UNBONDED" | "SET_CONTROLLER" | "SLASH" | "NOMINATE" | "CHILL" | "APPROVE" | "OPT_IN" | "OPT_OUT" | "LOCK" | "UNLOCK" | "WITHDRAW" | "REVOKE" | "ACTIVATE" | "REGISTER" | "NFT_IN" | "NFT_OUT" | "STAKE" | "UNSTAKE" | "WITHDRAW_UNSTAKED";
/**
 *
 */
export declare type Operation = {
    id: string;
    hash: string;
    type: OperationType;
    value: BigNumber;
    fee: BigNumber;
    senders: string[];
    recipients: string[];
    blockHeight: number | null | undefined;
    blockHash: string | null | undefined;
    transactionSequenceNumber?: number;
    accountId: string;
    standard?: NFTStandard | string;
    operator?: string;
    contract?: string;
    tokenId?: string;
    date: Date;
    extra: Record<string, any>;
    hasFailed?: boolean;
    subOperations?: Operation[];
    internalOperations?: Operation[];
    nftOperations?: Operation[];
    transactionRaw?: TransactionCommonRaw;
};
/**
 *
 */
export declare type OperationRaw = {
    id: string;
    hash: string;
    type: OperationType;
    value: string;
    fee: string;
    senders: string[];
    recipients: string[];
    blockHeight: number | null | undefined;
    blockHash: string | null | undefined;
    transactionSequenceNumber?: number;
    accountId: string;
    hasFailed?: boolean;
    standard?: NFTStandard | string;
    operator?: string;
    contract?: string;
    tokenId?: string;
    date: string;
    extra: Record<string, any>;
    subOperations?: OperationRaw[];
    internalOperations?: OperationRaw[];
    nftOperations?: OperationRaw[];
    transactionRaw?: TransactionCommonRaw;
};
/**
 *
 */
export declare type DailyOperationsSection = {
    day: Date;
    data: Operation[];
};
/**
 *
 */
export declare type DailyOperations = {
    sections: DailyOperationsSection[];
    completed: boolean;
};
//# sourceMappingURL=operation.d.ts.map